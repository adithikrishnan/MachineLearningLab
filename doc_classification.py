# -*- coding: utf-8 -*-
"""Doc_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bjbt6IVkS6tuYvwNQrrgykPeEHk2wXdX
"""

#DOCUMENT CLASSIFICATION

import pandas as pd
from pandas import DataFrame
df_imdb = pd.read_csv("/content/imdb_labelled.txt", index_col=None, sep="\t")

df_imdb

print(df_imdb.keys())

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df_imdb['Text'], df_imdb['Label'],train_size=0.8,random_state=100)

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(strip_accents='ascii', token_pattern=u'(?ui)\\b\\w*[a-z]+\\w*\\b', lowercase=True, stop_words='english')
X_train_cv = cv.fit_transform(X_train)
X_test_cv = cv.transform(X_test)

word_freq_df = pd.DataFrame(X_train_cv.toarray(), columns=cv.get_feature_names())
top_words_df = pd.DataFrame(word_freq_df.sum()).sort_values(0, ascending=False)

print(top_words_df)

from sklearn.naive_bayes import MultinomialNB
naive_bayes = MultinomialNB()

naive_bayes.fit(X_train_cv, y_train)
predictions = naive_bayes.predict(X_test_cv)

from sklearn.metrics import accuracy_score, precision_score, recall_score
print('Accuracy score: ', accuracy_score(y_test, predictions))
print('Precision score: ', precision_score(y_test, predictions))
print('Recall score: ', recall_score(y_test, predictions))

